{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///main.js","webpack:///webpack/bootstrap e90ae2a9301f56c2d13c","webpack:///search.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/amapsearch/search.vue?6919","webpack:///./src/components/amapsearch/search.js","webpack:///./src/mixins/amap.js","webpack:///./src/components/amapsearch/search.vue"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","options","render","staticRenderFns","_scopeId","computed","create","keys","forEach","key","_vm","_h","$createElement","_c","_self","staticClass","style","width","height","directives","rawName","expression","attrs","id","autocomplete","placeholder","domProps","on","keyup","$event","_k","keyCode","searchDefaultSuggestion","input","target","composing","autocomplateInput","amap_1","console","log","amapmixinApp","data","watch","val","oldVal","$emit","selectedPoi.location.lat","newVal","autoConfirm","selectedPoi","isMoved","loc","JSON","stringify","parse","props","defaultLng","Number","required","defaultLat","defaultCity","String","searchCount","Boolean","useClick","methods","setMarkerLocation","mounted","initAmap","initMouseTools","initAutocomplate","mixins","map","placeSearch","amapCounty","geocoder","location","lat","lng","poi","address","editingPolygon","mouseTool","domContainer","mapCenter","vm","AMap","Map","resizeEnable","zoom","center","plugin","addControl","ToolBar","Scale","Geocoder","radius","extensions","MouseTool","pageSize","cityname","autoOptions","city","Autocomplete","PlaceSearch","event","addListener","e","search","status","result","info","clearMap","renderSearchMarker","poiList","pois","setFitView","setZoom","clear","alert","marker","position","obj","getPosition","getAddress","_address","regeocode","addressComponent","district","street","streetNumber","formattedAddress","infoWindow","InfoWindow","offset","Pixel","poiIndex","_loop_1","Marker","icon","draggable","content","$refs","setExtData","getExtData","setContent","open","emit","clearInfoWindow","that","lnglat","setPosition","LngLat","_i","poiList_1","length","initAMapDistrictSearch","keyword","callback","service","opts","subdistrict","showbiz","level","DistrictSearch","county","districtList","setCenter","Component"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nmodule.exports = __webpack_require__(4).default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"amap-search__container\",\n    style: ({\n      width: _vm.width + 'px',\n      height: _vm.height + 'px'\n    })\n  }, [_c('div', {\n    staticClass: \"amap-search__autocomplate\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.autocomplateInput),\n      expression: \"autocomplateInput\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"id\": \"autocomplate-input\",\n      \"autocomplete\": \"off\",\n      \"placeholder\": \"输入详细地址\"\n    },\n    domProps: {\n      \"value\": (_vm.autocomplateInput)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.searchDefaultSuggestion($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.autocomplateInput = $event.target.value\n      }\n    }\n  })])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar amap_1 = __webpack_require__(5);\nconsole.log(amap_1.amapmixinApp);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    name: 'amapSearch',\n    data: function () {\n        return {\n            // 高德地图相关的 amapmixin 中使用的\n            autocomplateInput: '',\n        };\n    },\n    watch: {\n        autocomplateInput: function (val, oldVal) {\n            this.$emit('userInput', val);\n        },\n        'selectedPoi.location.lat': function selectedPoiLocation(newVal, oldVal) {\n            /**\n             * 如果不显示确定按钮, 拖到那里是哪里的话,\n             * searchCount 默认为1\n             */\n            if (this.autoConfirm) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    props: {\n        defaultLng: {\n            type: Number,\n            default: 22.550058,\n            required: false\n        },\n        defaultLat: {\n            type: Number,\n            default: 114.065702,\n            required: false\n        },\n        defaultCity: {\n            type: String,\n            default: '深圳',\n            required: false\n        },\n        searchCount: {\n            type: Number,\n            default: 1,\n            required: false\n        },\n        width: {\n            type: Number,\n            required: true\n        },\n        height: {\n            type: Number,\n            required: true\n        },\n        autoConfirm: {\n            type: Boolean,\n            default: false,\n            required: false\n        },\n        useClick: {\n            type: Boolean,\n            default: false,\n            required: false\n        }\n    },\n    methods: {\n        setMarkerLocation: function () {\n            if (this.autoConfirm == false) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    mounted: function () {\n        // 初始化 domId\n        this.initAmap('amap-container', [this.defaultLat, this.defaultLng]);\n        /**\n         * 如果不显示确定按钮, 拖到那里是哪里的话,\n         * searchCount 默认为1\n         */\n        var searchCount = this.autoConfirm ? 1 : this.searchCount;\n        /**\n         * 如果支持用户点击, 点在哪里是哪里\n         * searchCount 默认为1\n         */\n        if (this.useClick) {\n            this.initMouseTools();\n            searchCount = 1;\n        }\n        // 初始化 自动完成 domId ''代表默认全国\n        this.initAutocomplate(\"autocomplate-input\", searchCount, this.defaultCity);\n    },\n    mixins: [amap_1.amapmixinApp],\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nexports.amapmixinApp = {\n    data: function () {\n        return {\n            map: {},\n            autocomplete: {},\n            placeSearch: {},\n            amapCounty: {},\n            geocoder: {},\n            selectedPoi: {\n                location: {\n                    lat: 0,\n                    lng: 0\n                },\n                poi: {\n\n                },\n                address: '',\n                name: '',\n                isMoved: true\n            },\n            editingPolygon: {},\n            mouseTool: {}\n        };\n    },\n    mounted: function () {\n        // console.log('amapmixin mounted');\n    },\n    methods: {\n        /**\n         * 初始化amap对象\n         */\n        initAmap: function (domContainer, mapCenter) {\n            var vm = this;\n            vm.map = new AMap.Map(domContainer, {\n                resizeEnable: true,\n                zoom: 12,\n                center: mapCenter\n            });\n            AMap.plugin(['AMap.ToolBar', 'AMap.Scale'], function () {\n                vm.map.addControl(new AMap.ToolBar());\n                vm.map.addControl(new AMap.Scale());\n            });\n            vm.geocoder = new AMap.Geocoder({\n                radius: 1000,\n                extensions: \"all\"\n            });\n            if (AMap.MouseTool) {\n                vm.mouseTool = new AMap.MouseTool(vm.map);\n            }\n        },\n        /**\n         * 初始化搜索菜单\n         *\n         * @param {string} cityname\n         */\n        initAutocomplate: function (domContainer, pageSize, cityname) {\n            // console.log('cityname', cityname);\n            var vm = this;\n            AMap.plugin(['AMap.Autocomplete', 'AMap.PlaceSearch'], function () {\n                var autoOptions = {\n                    city: cityname && '',\n                    input: domContainer //使用联想输入的input的id\n                };\n                vm.autocomplete = new AMap.Autocomplete(autoOptions);\n                vm.placeSearch = new AMap.PlaceSearch({\n                    city: cityname,\n                    map: '',\n                    pageSize: pageSize\n                });\n                AMap.event.addListener(vm.autocomplete, \"select\", function (e) {\n                    //TODO 针对选中的poi实现自己的功能\n                    vm.autocomplateInput = e.poi.name;\n                    vm.placeSearch.search(e.poi.name, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            // 清除所有覆盖物\n                            vm.map.clearMap();\n                            // 绘制自己的坐标点\n                            vm.renderSearchMarker(result.poiList.pois);\n                            // 地图自适应显示\n                            vm.map.setFitView();\n                            vm.map.setZoom(14);\n                            // 清除搜索结果\n                            vm.placeSearch.clear();\n                        }\n                        else {\n                            alert('没有匹配结果')\n                        }\n                    });\n                });\n            });\n        },\n        /**\n         * 地图鼠标单击事件\n         */\n        initMouseTools: function () {\n            var vm = this;\n            vm.mouseTool.marker();\n            vm.mouseTool.on('draw', function (data) {\n                vm.map.clearMap();\n                var position = data.obj.getPosition();\n                vm.geocoder.getAddress(position, function (status, result) {\n                    if (status === 'complete' && result.info === 'OK') {\n                        var _address = result.regeocode.addressComponent;\n                        var poi = {\n                            location: position,\n                            address: _address.district + _address.street + _address.streetNumber,\n                            name: result.regeocode.formattedAddress\n                        };\n                        vm.renderSearchMarker([poi], true);\n                    }\n                });\n            });\n        },\n        // 如果有一个结果, 自动设置. 如果没有让用户选择\n        searchDefaultSuggestion: function (event) {\n            var vm = this;\n            // TODO: 如果输入回车 自动blur userInput\n            vm.placeSearch.search(this.autocomplateInput, function (status, result) {\n                if (status === 'complete' && result.info === 'OK') {\n                    // 清除所有覆盖物\n                    vm.map.clearMap();\n                    // 绘制自己的坐标点\n                    vm.renderSearchMarker(result.poiList.pois);\n                    // 地图自适应显示\n                    vm.map.setFitView();\n                    vm.map.setZoom(14);\n                    // 清除搜索结果\n                    vm.placeSearch.clear();\n                }\n                else {\n                    alert('没有匹配结果');\n                }\n            });\n        },\n        /**\n         * 显示自定义的marker\n         */\n        renderSearchMarker: function (poiList) {\n            var vm = this;\n            var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });\n            var poiIndex = 0;\n            var _loop_1 = function (poi) {\n                poiIndex++;\n                marker = new AMap.Marker({\n                    position: poi.location,\n                    map: vm.map,\n                    icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_r' + (poiIndex) + '.png',\n                    draggable: true\n                });\n                marker.content = vm.$refs[\"marker-content\"];\n                // 默认没有移动过\n                marker.setExtData({ isMoved: true, poiIndex: poiIndex });\n                marker.on('click', function (e) {\n                    //  如果信息有更改\n                    vm.selectedPoi.poi = poi;\n                    vm.selectedPoi.location = poi.location;\n                    vm.selectedPoi.address = poi.address;\n                    vm.selectedPoi.name = poi.name;\n                    vm.selectedPoi.isMoved = this.getExtData().isMoved;\n                    infoWindow.setContent(e.target.content);\n                    infoWindow.open(vm.map, e.target.getPosition());\n                });\n                // 触发一次click显示\n                marker.emit('click', { target: marker });\n                // 因为会自动触发 拖拽之后也会触发 所以在这里做检查\n                // vm.setMarkerLocation(poi);\n                marker.on('dragstart', function (e) {\n                    vm.map.clearInfoWindow();\n                });\n                marker.on('dragend', function (e) {\n                    var that = this;\n                    // console.log(e.lnglat);\n                    that.setExtData({ isMoved: true });\n                    var lat = e.lnglat.lat, lng = e.lnglat.lng;\n                    that.setPosition(new AMap.LngLat(lng, lat));\n                    vm.geocoder.getAddress(e.lnglat, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            var _address = result.regeocode.addressComponent;\n                            vm.selectedPoi.location = e.lnglat;\n                            vm.selectedPoi.poi = e;\n                            vm.selectedPoi.address = _address.district + _address.street + _address.streetNumber;\n                            vm.selectedPoi.name = result.regeocode.formattedAddress;\n                            vm.selectedPoi.isMoved = that.getExtData().isMoved;\n                            // console.log(vm.selectedPoi.name);\n                            infoWindow.setContent(e.target.content);\n                            infoWindow.open(vm.map, e.target.getPosition());\n                        }\n                    });\n                    //\n                });\n            };\n            var marker;\n            for (var _i = 0, poiList_1 = poiList; _i < poiList_1.length; _i++) {\n                var poi = poiList_1[_i];\n                _loop_1(poi);\n            }\n        },\n        /**\n         * TODO:下一步功能\n         * 改变行政区划的时候改变相应的区域\n         * 用户选择北京的时候, 直接改变区域中心点\n         */\n        initAMapDistrictSearch: function (keyword, callback) {\n            var vm = this;\n            AMap.service('AMap.DistrictSearch', function () {\n                var opts = {\n                    subdistrict: 1,\n                    extensions: 'base',\n                    showbiz: false,\n                    level: 'district' //查询行政级别为 县\n                };\n                //实例化DistrictSearch\n                var district = new AMap.DistrictSearch(opts);\n                //行政区查询\n                district.search(keyword, function (status, result) {\n                    var county = result.districtList[0];\n                    // 设置地图中心点\n                    vm.map.setCenter(county.center);\n                    vm.map.setZoom(12);\n                    callback(county);\n                });\n            });\n        },\n    }\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(1)\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(0),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nexports.__esModule = true;\nexports[\"default\"] = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e90ae2a9301f56c2d13c","<template>\n  <div class=\"amap-search__container\" :style=\"{width: width + 'px',height: height + 'px'}\">\n    <!--自动输入框-->\n    <div class=\"amap-search__autocomplate\">\n        <input type=\"text\" v-model=\"autocomplateInput\" id=\"autocomplate-input\"\n        @keyup.enter=\"searchDefaultSuggestion\" autocomplete=\"off\"\n        placeholder=\"输入详细地址\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nmodule.exports = require('./search.js').default\n</script>\n\n<style lang=\"less\">\n#amap-container{\n  width: inherit;\n  height: inherit;\n}\n\n.amap-search__container{\n  position: relative;\n  width: inherit;\n  height: inherit;\n  margin: 0 auto;\n}\n\n.amap-search__autocomplate {\n  width: 400px;\n  z-index: 20;\n  background-color: #ddf;\n  color: #333;\n  box-shadow: 0px 2px 4px 0px silver;\n  position: absolute;\n  top: 10px;\n  left: 25%;\n  border-radius: 5px;\n  overflow: hidden;\n  line-height: 20px;\n  border-radius: 5px;\n  height: 34px;\n  line-height: 34px;\n  display: flex;\n  flex: 1;\n  justify-content:stretch;\n\n  input[type=\"text\"] {\n    height: 25px;\n    border: 0;\n    width: auto;\n    outline: none;\n    height: inherit;\n    line-height: inherit;\n    font-size: 14px;\n    padding-left: 15px;\n    border-radius: 5px 0px 0px 5px;\n    flex: 1;\n    &:focus{\n      border: none !important;\n    }\n  }\n\n  a.amap-search__search-btn {\n    background: #06C1AE;\n    color: #fff;\n    border:0;\n    width: 40px;\n    height: inherit;\n    font-size: 12px;\n    line-height: inherit;\n  }\n}\n\na.amap-search__confirm-btn{\n  background: #06C1AE;\n  color: #fff;\n  border:0;\n  min-width: 40px;\n  text-align: center;\n  font-size: 12px;\n  height: 34px;\n  line-height: 34px;\n  padding:0px 10px;\n  display: inline-block;\n  border-radius: 5px;\n}\n/* 弹出信息窗体 */\n.marker-content{\n  .marker-content-header{\n    border-bottom: 1px solid #E5E5E5;\n    height: 24px;\n    background: none;\n    .marker-circle{\n      background: #99D465;\n      height: 18px;\n      width: 18px;\n      border-radius: 9px;\n      color: #fff;\n      float: left;\n      text-align: center;\n      span{\n        line-height: 18px;\n        width: 18px;\n      }\n    }\n    .notice-icon{\n      color: #06C1AE;\n      margin-right: 8px;\n    }\n    .notice{\n      font-size: 12px;\n      font-weight: bold;\n    }\n  }\n  .marker-info{\n    padding-top: 10px;\n    .marker-name {\n      font-size: 15px;\n    }\n    .marker-address {\n      padding: 5px 0px;\n      font-size: 12px;\n      color: #a0a0a0;\n    }\n  }\n}\n\n/*重写高德css*/\n\n.amap-sug-result {\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px 0px silver;\n  border: none;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  .auto-item{\n    font-size: 14px;\n    height: 24px;\n    line-height: 24px;\n    padding-left: 15px;\n    .auto-item-span{\n      // 提示灰色文字\n    }\n  }\n}\n\n.amap-info-outer{\n  border-radius: 5px !important;\n  border: none !important;\n}\n\n// .amap-info-sharp{\n//   background-image: url(/images/marker_drop.png) !important;\n//   height: 13px !important;\n//   background-repeat: no-repeat !important;\n//   top: -3px  !important;\n// }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// search.vue?0efe6795","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"amap-search__container\",\n    style: ({\n      width: _vm.width + 'px',\n      height: _vm.height + 'px'\n    })\n  }, [_c('div', {\n    staticClass: \"amap-search__autocomplate\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.autocomplateInput),\n      expression: \"autocomplateInput\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"id\": \"autocomplate-input\",\n      \"autocomplete\": \"off\",\n      \"placeholder\": \"输入详细地址\"\n    },\n    domProps: {\n      \"value\": (_vm.autocomplateInput)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.searchDefaultSuggestion($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.autocomplateInput = $event.target.value\n      }\n    }\n  })])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-e9a7c18a\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/amapsearch/search.vue\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar amap_1 = require(\"../../mixins/amap.js\");\nconsole.log(amap_1.amapmixinApp);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    name: 'amapSearch',\n    data: function () {\n        return {\n            // 高德地图相关的 amapmixin 中使用的\n            autocomplateInput: '',\n        };\n    },\n    watch: {\n        autocomplateInput: function (val, oldVal) {\n            this.$emit('userInput', val);\n        },\n        'selectedPoi.location.lat': function selectedPoiLocation(newVal, oldVal) {\n            /**\n             * 如果不显示确定按钮, 拖到那里是哪里的话,\n             * searchCount 默认为1\n             */\n            if (this.autoConfirm) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    props: {\n        defaultLng: {\n            type: Number,\n            default: 22.550058,\n            required: false\n        },\n        defaultLat: {\n            type: Number,\n            default: 114.065702,\n            required: false\n        },\n        defaultCity: {\n            type: String,\n            default: '深圳',\n            required: false\n        },\n        searchCount: {\n            type: Number,\n            default: 1,\n            required: false\n        },\n        width: {\n            type: Number,\n            required: true\n        },\n        height: {\n            type: Number,\n            required: true\n        },\n        autoConfirm: {\n            type: Boolean,\n            default: false,\n            required: false\n        },\n        useClick: {\n            type: Boolean,\n            default: false,\n            required: false\n        }\n    },\n    methods: {\n        setMarkerLocation: function () {\n            if (this.autoConfirm == false) {\n                this.selectedPoi.isMoved = false;\n                var loc = JSON.stringify(this.selectedPoi);\n                this.$emit('pickedLocation', JSON.parse(loc));\n            }\n        }\n    },\n    mounted: function () {\n        // 初始化 domId\n        this.initAmap('amap-container', [this.defaultLat, this.defaultLng]);\n        /**\n         * 如果不显示确定按钮, 拖到那里是哪里的话,\n         * searchCount 默认为1\n         */\n        var searchCount = this.autoConfirm ? 1 : this.searchCount;\n        /**\n         * 如果支持用户点击, 点在哪里是哪里\n         * searchCount 默认为1\n         */\n        if (this.useClick) {\n            this.initMouseTools();\n            searchCount = 1;\n        }\n        // 初始化 自动完成 domId ''代表默认全国\n        this.initAutocomplate(\"autocomplate-input\", searchCount, this.defaultCity);\n    },\n    mixins: [amap_1.amapmixinApp],\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/amapsearch/search.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nexports.amapmixinApp = {\n    data: function () {\n        return {\n            map: {},\n            autocomplete: {},\n            placeSearch: {},\n            amapCounty: {},\n            geocoder: {},\n            selectedPoi: {\n                location: {\n                    lat: 0,\n                    lng: 0\n                },\n                poi: {\n\n                },\n                address: '',\n                name: '',\n                isMoved: true\n            },\n            editingPolygon: {},\n            mouseTool: {}\n        };\n    },\n    mounted: function () {\n        // console.log('amapmixin mounted');\n    },\n    methods: {\n        /**\n         * 初始化amap对象\n         */\n        initAmap: function (domContainer, mapCenter) {\n            var vm = this;\n            vm.map = new AMap.Map(domContainer, {\n                resizeEnable: true,\n                zoom: 12,\n                center: mapCenter\n            });\n            AMap.plugin(['AMap.ToolBar', 'AMap.Scale'], function () {\n                vm.map.addControl(new AMap.ToolBar());\n                vm.map.addControl(new AMap.Scale());\n            });\n            vm.geocoder = new AMap.Geocoder({\n                radius: 1000,\n                extensions: \"all\"\n            });\n            if (AMap.MouseTool) {\n                vm.mouseTool = new AMap.MouseTool(vm.map);\n            }\n        },\n        /**\n         * 初始化搜索菜单\n         *\n         * @param {string} cityname\n         */\n        initAutocomplate: function (domContainer, pageSize, cityname) {\n            // console.log('cityname', cityname);\n            var vm = this;\n            AMap.plugin(['AMap.Autocomplete', 'AMap.PlaceSearch'], function () {\n                var autoOptions = {\n                    city: cityname && '',\n                    input: domContainer //使用联想输入的input的id\n                };\n                vm.autocomplete = new AMap.Autocomplete(autoOptions);\n                vm.placeSearch = new AMap.PlaceSearch({\n                    city: cityname,\n                    map: '',\n                    pageSize: pageSize\n                });\n                AMap.event.addListener(vm.autocomplete, \"select\", function (e) {\n                    //TODO 针对选中的poi实现自己的功能\n                    vm.autocomplateInput = e.poi.name;\n                    vm.placeSearch.search(e.poi.name, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            // 清除所有覆盖物\n                            vm.map.clearMap();\n                            // 绘制自己的坐标点\n                            vm.renderSearchMarker(result.poiList.pois);\n                            // 地图自适应显示\n                            vm.map.setFitView();\n                            vm.map.setZoom(14);\n                            // 清除搜索结果\n                            vm.placeSearch.clear();\n                        }\n                        else {\n                            alert('没有匹配结果')\n                        }\n                    });\n                });\n            });\n        },\n        /**\n         * 地图鼠标单击事件\n         */\n        initMouseTools: function () {\n            var vm = this;\n            vm.mouseTool.marker();\n            vm.mouseTool.on('draw', function (data) {\n                vm.map.clearMap();\n                var position = data.obj.getPosition();\n                vm.geocoder.getAddress(position, function (status, result) {\n                    if (status === 'complete' && result.info === 'OK') {\n                        var _address = result.regeocode.addressComponent;\n                        var poi = {\n                            location: position,\n                            address: _address.district + _address.street + _address.streetNumber,\n                            name: result.regeocode.formattedAddress\n                        };\n                        vm.renderSearchMarker([poi], true);\n                    }\n                });\n            });\n        },\n        // 如果有一个结果, 自动设置. 如果没有让用户选择\n        searchDefaultSuggestion: function (event) {\n            var vm = this;\n            // TODO: 如果输入回车 自动blur userInput\n            vm.placeSearch.search(this.autocomplateInput, function (status, result) {\n                if (status === 'complete' && result.info === 'OK') {\n                    // 清除所有覆盖物\n                    vm.map.clearMap();\n                    // 绘制自己的坐标点\n                    vm.renderSearchMarker(result.poiList.pois);\n                    // 地图自适应显示\n                    vm.map.setFitView();\n                    vm.map.setZoom(14);\n                    // 清除搜索结果\n                    vm.placeSearch.clear();\n                }\n                else {\n                    alert('没有匹配结果');\n                }\n            });\n        },\n        /**\n         * 显示自定义的marker\n         */\n        renderSearchMarker: function (poiList) {\n            var vm = this;\n            var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });\n            var poiIndex = 0;\n            var _loop_1 = function (poi) {\n                poiIndex++;\n                marker = new AMap.Marker({\n                    position: poi.location,\n                    map: vm.map,\n                    icon: 'http://webapi.amap.com/theme/v1.3/markers/n/mark_r' + (poiIndex) + '.png',\n                    draggable: true\n                });\n                marker.content = vm.$refs[\"marker-content\"];\n                // 默认没有移动过\n                marker.setExtData({ isMoved: true, poiIndex: poiIndex });\n                marker.on('click', function (e) {\n                    //  如果信息有更改\n                    vm.selectedPoi.poi = poi;\n                    vm.selectedPoi.location = poi.location;\n                    vm.selectedPoi.address = poi.address;\n                    vm.selectedPoi.name = poi.name;\n                    vm.selectedPoi.isMoved = this.getExtData().isMoved;\n                    infoWindow.setContent(e.target.content);\n                    infoWindow.open(vm.map, e.target.getPosition());\n                });\n                // 触发一次click显示\n                marker.emit('click', { target: marker });\n                // 因为会自动触发 拖拽之后也会触发 所以在这里做检查\n                // vm.setMarkerLocation(poi);\n                marker.on('dragstart', function (e) {\n                    vm.map.clearInfoWindow();\n                });\n                marker.on('dragend', function (e) {\n                    var that = this;\n                    // console.log(e.lnglat);\n                    that.setExtData({ isMoved: true });\n                    var lat = e.lnglat.lat, lng = e.lnglat.lng;\n                    that.setPosition(new AMap.LngLat(lng, lat));\n                    vm.geocoder.getAddress(e.lnglat, function (status, result) {\n                        if (status === 'complete' && result.info === 'OK') {\n                            var _address = result.regeocode.addressComponent;\n                            vm.selectedPoi.location = e.lnglat;\n                            vm.selectedPoi.poi = e;\n                            vm.selectedPoi.address = _address.district + _address.street + _address.streetNumber;\n                            vm.selectedPoi.name = result.regeocode.formattedAddress;\n                            vm.selectedPoi.isMoved = that.getExtData().isMoved;\n                            // console.log(vm.selectedPoi.name);\n                            infoWindow.setContent(e.target.content);\n                            infoWindow.open(vm.map, e.target.getPosition());\n                        }\n                    });\n                    //\n                });\n            };\n            var marker;\n            for (var _i = 0, poiList_1 = poiList; _i < poiList_1.length; _i++) {\n                var poi = poiList_1[_i];\n                _loop_1(poi);\n            }\n        },\n        /**\n         * TODO:下一步功能\n         * 改变行政区划的时候改变相应的区域\n         * 用户选择北京的时候, 直接改变区域中心点\n         */\n        initAMapDistrictSearch: function (keyword, callback) {\n            var vm = this;\n            AMap.service('AMap.DistrictSearch', function () {\n                var opts = {\n                    subdistrict: 1,\n                    extensions: 'base',\n                    showbiz: false,\n                    level: 'district' //查询行政级别为 县\n                };\n                //实例化DistrictSearch\n                var district = new AMap.DistrictSearch(opts);\n                //行政区查询\n                district.search(keyword, function (status, result) {\n                    var county = result.districtList[0];\n                    // 设置地图中心点\n                    vm.map.setCenter(county.center);\n                    vm.map.setZoom(12);\n                    callback(county);\n                });\n            });\n        },\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/mixins/amap.js\n// module id = 5\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader!../../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-e9a7c18a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./search.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./search.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-e9a7c18a\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./search.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nexports.__esModule = true;\nexports[\"default\"] = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/amapsearch/search.vue\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}